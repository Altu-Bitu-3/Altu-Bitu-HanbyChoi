// 구현 & 코너케이스 1063 킹
#include <iostream> // 표준 입출력 헤더

using namespace std; // 표준 네임스페이스 선언

int main() { // 연산을 실행할 메인 함수
	int sr, sc, kr, kc, nr, nc; // 돌의 좌표, 킹의 좌표, 움직일 좌표 정보 저장할 변수 선언
	int n; // 입력 값을 저장할 변수 선언
	string a, b; // 위치 정보 저장할 변수 선언
	cin >> a >> b >> n; // 킹의 위치, 돌의 위치, 움직이는 횟수 n 입력 받기

	kr = 9 - (a[1] - '0'), kc = a[0] - 'A' + 1; // 킹의 좌표값 설정
	sr = 9 - (b[1] - '0'), sc = b[0] - 'A' + 1; // 돌의 좌표값 설정

	while (n--) { // n번의 움직임
		string dir; // 움직이는 정보 입력 받을 변수 선언
		cin >> dir; // 움직이는 정보 입력

		/*
		R : 한 칸 오른쪽으로
		L : 한 칸 왼쪽으로
		B : 한 칸 아래로
		T : 한 칸 위로
		RT : 오른쪽 위 대각선으로
		LT : 왼쪽 위 대각선으로
		RB : 오른쪽 아래 대각선으로
		LB : 왼쪽 아래 대각선으로
		*/

		if (dir == "R") { // 입력이 R이면
			nr = 0, nc = 1; // 한 칸 오른쪽으로 좌표 이동
		}
		else if (dir == "L") { // 입력이 L이면
			nr = 0, nc = -1; // 한 칸 왼쪽으로 좌표 이동
		}
		else if (dir == "B") { // 입력이 B이면
			nr = 1, nc = 0; // 한 칸 아래로 좌표 이동
		}
		else if (dir == "T") { // 입력이 T면
			nr = -1, nc = 0; // 한 칸 위로 좌표 이동
		}
		else if (dir == "RT") { // 입력이 RT면
			nr = -1, nc = 1; // 오른쪽 위 대각선으로 좌표 이동
		}
		else if (dir == "LT") { // 입력이 LT면
			nr = -1, nc = -1; // 왼쪽 위 대각선으로 좌표 이동
		}
		else if (dir == "RB") { // 입력이 RB면
			nr = 1, nc = 1; // 오른쪽 아래 대각선으로 좌표 이동
		}
		else if (dir == "LB") { // 입력이 LB면
			nr = 1, nc = -1; // 왼쪽 아래 대각선으로 좌표 이동
		}

		if (kr + nr <= 0 || kr + nr > 8 || kc + nc <= 0 || kc + nc > 8) { // 이동할 좌표가 체스판 밖인 경우
			continue; // 이 이동은 건너뛰기
		}

		kr += nr; // 킹 좌표 이동 (가로)
		kc += nc; // 킹 좌표 이동 (세로)

		if (kr == sr && kc == sc) { // 킹을 돌이 있는 곳으로 이동시킨 경우 - 돌을 킹이 움직인 방향과 같은 방향으로 한 칸 이동
			if (sr + nr <= 0 || sr + nr > 8 || sc + nc <= 0 || sc + nc > 8) { // 돌이 이동할 좌표가 체스판 밖이면
				kr -= nr; // 킹을 원래 자리로 돌려놓기 (가로)
				kc -= nc; // 킹을 원래 자리로 돌려놓기 (세로)
				continue; // 이 이동은 건너뛰기
			}
			sr += nr; // 돌 좌표 이동 (가로)
			sc += nc; // 돌 좌표 이동 (세로)
		}
	}
	cout << (char)(kc + 64) << 9 - kr << '\n' << (char)(sc + 64) << 9 - sr; // 킹의 마지막 위치, 돌의 마지막 위치를 문자로 변환해 출력
	return 0; // 함수 종료
}